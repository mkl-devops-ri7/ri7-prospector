<div class="relative flex justify-center my-3">
    <div
        class="absolute inset-x-0 top-1/2 h-px -translate-y-1/2 bg-transparent bg-gradient-to-r from-transparent via-gray-500 to-transparent opacity-75"
    ></div>

    <span class="relative z-10 bg-white px-6 text-2xl"><strong>CONTACT</strong></span>
</div>

<div class="relative">
    <label for="contact-search" class="sr-only"> Search </label>

    <input
        type="text"
        name="contact-search"
        id="contact-search"
        placeholder="{{ 'Name or email of contact'|trans }}"
        class="w-full rounded-md border-gray-200 py-3 pl-10 shadow-sm sm:text-sm"
    />

    <span class="absolute inset-y-0 end-0 grid w-10 place-content-center">
        <button type="button" class="text-gray-600 hover:text-gray-700">
            <span class="sr-only">Search</span>

            <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                class="h-4 w-4"
            >
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"
                />
            </svg>
        </button>
    </span>
</div>

<ul id="contact-list" class="invisible z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm"></ul>

<script type="application/javascript" defer>
    document.addEventListener("DOMContentLoaded", function () {
        const autocompleteInput = document.getElementById("contact-search");
        const autocompleteList = document.getElementById("contact-list");

        autocompleteInput.addEventListener("input", function () {
            const inputValue = this.value.trim();

            // Efface la liste des suggestions
            autocompleteList.innerHTML = '';

            // Vérifie si la valeur n'est pas vide
            if (inputValue.length > 3) {
                autocompleteList.classList.remove('invisible');

                // Appel à l'API avec la valeur de l'input
                // Remplacez l'URL de l'API par la vôtre
                fetch('/api/contacts?' +  new URLSearchParams({
                    firstName: inputValue,
                    lastName: inputValue,
                    email: inputValue,
                }))
                    .then(response => response.json())
                    .then(data => {
                        const contacts = data['hydra:member'];
                        contacts.forEach(item => {
                            const li = document.createElement("li");
                            li.className = 'relative cursor-default select-none py-2 pl-3 pr-9 text-gray-900'
                            li.textContent = item.firstName + ' ' + item.lastName + ' (' + item.email + ')';

                            // Ajoute un écouteur de clic pour gérer la sélection de l'élément
                            li.addEventListener("click", function () {
                                console.log('Contact sélectionné :', item);
                            });

                            autocompleteList.appendChild(li);
                        });
                    })
                    .catch(error => console.error('Erreur lors de la récupération des suggestions :', error));
            }
        });
    });
</script>
